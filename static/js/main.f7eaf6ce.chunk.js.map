{"version":3,"sources":["components/contacts/Contacts.module.css","components/section/Section.module.css","components/filter/Filter.module.css","components/App.module.css","redux/phonebook-types.js","redux/phonebook-reducer.js","redux/store.js","redux/phonebook-actions.js","components/dataInput/DataInput.js","components/contacts/contactItem/ContactItem.js","components/contacts/Contacts.js","components/section/Section.js","components/filter/Filter.js","components/container/Container.js","components/App.js","index.js","components/dataInput/DataInput.module.css"],"names":["module","exports","combineReducers","items","state","type","payload","isContactExist","alert","name","types","console","log","isFind","some","item","toLowerCase","filter","contact","id","rootReducer","contacts","contactsReducer","store","createStore","composeWithDevTools","user","value","connect","dispatch","addUser","contactsActions","useState","setName","number","setNumber","onHandleChange","e","target","className","style","form","onSubmit","preventDefault","shortid","generate","pattern","title","required","onChange","btn","ContactItem","onRemoveUser","s","button","onClick","filterInputHandler","allContacts","includes","removeUser","length","map","Section","children","section","toUpperCase","setFilter","label","input","Container","App","JSON","parse","localStorage","getItem","useEffect","setItem","stringify","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7eaf6ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contacts_item__2Gmj9\",\"button\":\"Contacts_button__3zKln\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2aN0g\",\"title\":\"Section_title__2oIwe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3K0YO\",\"label\":\"Filter_label__23XmH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1tA9O\"};","export default {\n    ADD: 'contact/add',\n    DELETE: 'contact/delete',\n    CHANGE_FILTER: 'contact/changeFilter',\n}","import {combineReducers} from 'redux';\nimport types from './phonebook-types';\n\nconst items = (state = [], {type, payload}) => {\n\n    const isContactExist = () => {\n        alert(`${payload.name} is already in contacts.`)\n        return [...state];\n    }\n\n    switch (type) {\n        case types.ADD:\n            console.log(payload)\n            const isFind = state.some(item => item.name.toLowerCase() === payload.name.toLowerCase());\n            return  isFind ?  isContactExist() : [...state, payload];\n        case types.DELETE:\n            return state.filter(contact => contact.id !== payload);\n        default:\n            return state;\n    }\n}\n\nconst filter = (state = '', {type, payload}) => {\n    switch (type) {\n        case types.CHANGE_FILTER:\n            return payload;\n\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    items,\n    filter,\n})","import {createStore, combineReducers} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport contactsReducer from \"./phonebook-reducer\";\n\n// const initialState = {\n//     contacts: {\n//         items: [],\n//         filter: ''\n//     }\n// }\n// const reducer = (state = initialState, {type, payload}) => state;\nconst rootReducer = combineReducers({\n    contacts: contactsReducer,\n})\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import types from './phonebook-types';\n\nconst addContact = (user) => ({\n    type: types.ADD,\n    payload: user,\n})\n\nconst deleteContact = (id) => ({\n    type: types.DELETE,\n    payload: id,\n})\n\nconst changeFilter = value => ({\n    type: types.CHANGE_FILTER,\n    payload: value,\n})\n\nexport default {addContact, deleteContact, changeFilter}","import React, {useState} from \"react\";\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport style from \"./DataInput.module.css\";\nimport shortid from 'shortid';\nimport contactsActions from \"../../redux/phonebook-actions\";\n\nconst DataInput = ({addUser}) => {\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const onHandleChange = e => {\n        const {value, name} = e.target;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return;\n        }\n    }\n\n    const onHandleSubmit = (e) => {\n        e.preventDefault();\n\n        addUser({\n            name: name,\n            number: number,\n            id: shortid.generate(),\n        });\n\n        setName('');\n        setNumber('');\n    }\n\n    return (\n        <form className={style.form} onSubmit={onHandleSubmit}>\n            <label>\n                Name:\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    className={style.name}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    onChange={onHandleChange}\n                    value={name}\n                />\n            </label>\n            <label>\n                Number:\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    className={style.number}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    onChange={onHandleChange}\n                    value={number}\n                />\n            </label>\n            <button type=\"submit\" className={style.btn}>Add contact</button>\n        </form>\n    )\n}\n\nDataInput.propTypes = {\n    addUser: PropTypes.func.isRequired,\n}\n\nconst mapDispatchToProps = dispatch => ({\n    addUser: (user) => dispatch(contactsActions.addContact(user)),\n});\n\nexport default connect(null, mapDispatchToProps)(DataInput);","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport s from \"../Contacts.module.css\";\n\nconst ContactItem = ({name, id, number, onRemoveUser}) => {\n    console.log(id)\n    const remove = () => onRemoveUser(id);\n\n    return (\n        <li className={s.item}><span>{name}: </span>{number}\n            <button type=\"button\" className={s.button} onClick={remove}>Delete</button>\n        </li>\n    )\n}\n\nContactItem.propTypes = {\n    user: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    }),\n}\n\n// const mapDispatchToProps = dispatch => ({\n//     removeUser:  id => dispatch(contactsActions.deleteContact(id)),\n// });\n\n// const mapStateToProps = state => ({\n//         user: state.contacts.items\n// });\n\nexport default ContactItem;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport ContactItem from \"./contactItem/ContactItem\";\nimport {connect} from \"react-redux\";\nimport s from \"./Contacts.module.css\";\nimport contactsActions from \"../../redux/phonebook-actions\";\n\nconst Contacts = ({contacts, filterInputHandler, removeUser}) => {\n\n    // const remove = () => removeUser(filterInputHandler.id);\n\n    return (\n        <>\n            {contacts.length > 0 && (\n                <ul>\n                    {contacts.map(({id, name, number}) => (\n                        <ContactItem\n                            key={id}\n                            id={id}\n                            name={name}\n                            number={number}\n                            onRemoveUser={() => removeUser(id)}\n                        />\n                    ))}\n                </ul>\n            )}\n        </>\n    );\n}\n\nContacts.propTypes = {\n    filterInputHandler: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n    })),\n    removeUser: PropTypes.func.isRequired,\n}\n\nconst filterInputHandler = (allContacts, filter) => allContacts.filter(item =>\n    item.name.toLowerCase().includes(filter.toLowerCase()));\n\n\nconst mapStateToProps = ({contacts: {items, filter}}) => ({\n    contacts: filterInputHandler(items, filter)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    removeUser: id => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);","import React from \"react\";\nimport style from \"./Section.module.css\";\nimport PropTypes from 'prop-types';\n\nconst Section = ({children, title}) => {\n    return (\n        <div className={style.section}>\n            <h2 className={style.title}>{title.toUpperCase()}</h2>\n            {children}\n        </div>\n    );\n};\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nexport default Section;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport contactsActions from \"../../redux/phonebook-actions\";\nimport style from \"./Filter.module.css\";\n\n\nconst Filter = ({filter, setFilter}) => {\n    return (\n        <>\n            <label className={style.label}>\n                Find contacts by name:\n                <input\n                    type=\"text\"\n                    name=\"filter\"\n                    className={style.input}\n                    onChange={setFilter}\n                    value={filter}\n                />\n            </label>\n        </>\n    );\n}\n\nFilter.propTypes = {\n    filter: PropTypes.string,\n    setFilter: PropTypes.func.isRequired,\n}\n\nconst mapDispatchToProps = dispatch => ({\n    setFilter: (e) => dispatch(contactsActions.changeFilter(e.target.value)),\n})\n\nconst mapStateToProps = state => ({\n    value: state.contacts.filter\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\nimport style from \"./Container.scss\";\n\nconst Container = ({children}) => {\n    return (\n        <div className={style.Container}>\n            {children}\n        </div>\n    );\n}\n\nexport default Container;\n","import React, {useEffect, useState} from \"react\";\nimport style from \"./App.module.css\";\nimport DataInput from \"./dataInput/DataInput\";\nimport Contacts from \"./contacts/Contacts\";\nimport Section from \"./section/Section\";\nimport Filter from \"./filter/Filter\";\nimport Container from \"./container/Container\";\n\nconst App = () => {\n\n    const [contacts, setContacts] = useState(() => {\n        return JSON.parse(localStorage.getItem('contacts')) ?? [];\n    });\n\n    // const [filter, setFilter] = useState('');\n\n    useEffect(() => {\n        localStorage.setItem('contacts', JSON.stringify(contacts));\n    }, [contacts]);\n\n    // const isContactExist = (name) => contacts.some(item => item.name.toLowerCase() === name.toLowerCase());\n\n    // const filterInputHandler = () => contacts.filter(item =>\n    //     item.name.toLowerCase().includes(filter.toLowerCase()));\n\n    // const filterValue = (e) => setFilter(e.target.value);\n\n    // const addUser = (user) => {\n    //     setContacts(prev => {\n    //         return [...prev, user];\n    //     })\n    // };\n\n    // const removeUser = (id) => {\n    //     setContacts(prev => [...prev.filter(contact => contact.id !== id)])\n    // };\n\n    return (\n\n        <div className={style.app}>\n            <Container>\n                <Section title=\"Phonebook\">\n                    <DataInput\n                        // isContactExist={isContactExist}\n                    />\n                </Section>\n                <Section title=\"Contacts\">\n                    <Filter />\n                    <Contacts\n                        contacts={contacts}\n                        // removeUser={removeUser}\n                    />\n                </Section>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"DataInput_form__1El21\",\"number\":\"DataInput_number__2m9S-\",\"name\":\"DataInput_name__2_neu DataInput_number__2m9S-\",\"btn\":\"DataInput_btn__3YWIG\"};"],"sourceRoot":""}